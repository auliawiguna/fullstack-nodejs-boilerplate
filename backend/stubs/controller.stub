
import slugify from 'slugify'

export default class {ControllerName}Controller {
    index = async (req, res) => {
        let limit = req.query.per_page ?? 10
        let offset = 0
        let page = req.query.page ?? 1
        offset = limit * (page - 1)

        return APIResponses.success(res, [], 'Success')
    }

    show = async (req, res) => {
        let { id } = req.params

        let record = []

        if (record) {
            return APIResponses.success(res, record, 'Success')
        } else {
            return APIResponses.notFound(res, 'Not Found')            
        }
    }

    store = async (req, res) => {
        let body = req.body

        let save = true

        if (save) {
            return APIResponses.success(res, save, 'Success')
        } else {
            return APIResponses.unprocessableEntity(res, 'Failed')
        }
    }

    update = async (req, res) => {
        const { id } = req.params

        try {
            let body = req.body
    
            let save = true

            if (save) {
                return APIResponses.success(res, save, 'Success')
            } else {
                return APIResponses.unprocessableEntity(res, 'Failed')
            }             
        } catch (error) {
            return APIResponses.serverError(res, error.message)
        }

    }

    destroy = async (req, res) => {
        try {
            let { id } = req.params 
            const deleteRecord = true

            if (deleteRecord) {
                return APIResponses.success(res, deleteRecord, 'Deleted')
            } else {
                return APIResponses.unprocessableEntity(redeleteRecords, 'Failed')
            }             
        } catch (error) {
            return APIResponses.serverError(res, error.message)
        }
    }
}